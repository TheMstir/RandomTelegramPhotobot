import asyncio
import logging
import os

import setting
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters.command import Command
import cv # —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–æ–º–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∏—è
import vk_api_funk

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)
# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token=setting.api_token, parse_mode='HTML')
# –î–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher()


# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@dp.message(Command("start"))  # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∏–Ω–∏—Ü–∏–∞—Ü–∏–∏ —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def cmd_start(message: types.Message):
    # –∫–Ω–æ–ø–∫–∏ –∫–æ—Ç–æ—Ä—ã–µ –ø–æ—è–≤–ª—è—é—Ç—Å—è —Å–æ —Å—Ç–∞—Ä—Ç–æ–º
    kb = [
        [
            types.KeyboardButton(text="—Å–ª—É—á–∞–π–Ω—ã–π –∫–æ–º–∏–∫—Å"),
            types.KeyboardButton(text="–∏–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏")
        ],
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder=""
    )

    await message.answer("–ì–∞–≤-–≥–∞–≤! –ü—Ä–∏–≤–µ—Ç!üê∂"
                         "\n–Ø –ü–µ—Å–º–∏—Ç-–±–æ—Çü¶¥, –≤—ã–¥–∞—é —Å–ª—É—á–∞–π–Ω—ã–π –∫–æ–º–∏–∫—Å –ø—Ä–æ —Å–µ–±—è –ø–æ –∑–∞–ø—Ä–æ—Å—É /comix.üå≠"
                         "\n–£ –º–µ–Ω—è –µ—Å—Ç—å —Ä–µ–∂–∏–º —ç—Ö–æ –∏ –ø–æ–∑–∂–µ –ø–æ—è–≤—è—Ç—Å—è –µ—â–µ —Ñ—É–Ω–∫—Ü–∏–∏, —É–∑–Ω–∞–π –∏—Ö –ø–æ –∑–∞–ø—Ä–æ—Å—É /help",
                         reply_markup=keyboard)


async def download_photo(photo: types.PhotoSize):
    file_path = os.path.join('/tmp', f"{photo.file_unique_id}.jpg")
    await bot.download_file_by_id(photo.file_id, file_path)
    return file_path


@dp.message(Command('photo'))
async def send_photo(message: types.Message, bot:Bot):
    await message.answer("–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –∞ —è –≤–µ—Ä–Ω—É –µ–µ –æ—Ç–≤–µ–¥–µ–Ω–Ω—ã–º –∫–æ–Ω—Ç—É—Ä–æ–º")
    # –∂–¥–µ–º –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ
    photo_message = await bot.await_next_event(types.NewMessage(chat=message.chat.id, content_types=types.ContentType.PHOTO))
    # —Å–∫–∞—á–∏–≤–∞–µ–º —Ñ–æ—Ç–æ

    file_path = await download_photo(photo_message.photo[-1])
    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ
    with open(file_path, 'rb') as photo_file:
        input_file = types.InputFile(photo_file)
        await message.answer_photo(input_file)
    # —É–¥–∞–ª—è–µ–º —Ñ–∞–π–ª
    os.remove(file_path)

    #
    # result = await message.answer_photo(
    #     image_from_pc,
    #     caption="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ —Ñ–∞–π–ª–∞ –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ"
    # )
    # await message.answer("–í–æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç:\n" + "\n", photo_message)


@dp.message(Command("comix"))
async def send_random_comix(message: types.Message, bot:Bot):
    file_ids = [] # –µ—Å–ª–∏ –ø–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å (–ø–æ–∫–∞ –Ω–µ –≤–∏–∂—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
    image_from_url = types.URLInputFile(vk_api_funk.get_random_comix(), bot)

    # –ø—Ä–æ—Å—Ç–µ–π—à–∏–π —Ä–µ–∂–∏–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    with open('log.txt', 'a', encoding='utf-8') as l:
        l.write(f'-> –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.chat.username} –∑–∞–ø—Ä–æ—Å–∏–ª –∫–æ–º–∏–∫—Å –∏ –ø–æ–ª—É—á–∏–ª {image_from_url}\n')

    result = await message.answer_photo(
        image_from_url,
        caption="–°–º–æ—Ç—Ä–∏ –∫–∞–∫–æ–π, —Ö–æ—á–µ—à—å –µ—â–µ? –∂–º–∏ —Å—é–¥–∞ /comix"
    )
    file_ids.append(result.photo[-1].file_id)


@dp.message(F.text.startswith("—Å–ª—É—á–∞–π–Ω—ã–π –∫–æ–º–∏–∫—Å"))
async def with_puree(message: types.Message):
    """–∫–Ω–æ–ø–∫–∞ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∫–æ–º–∏–∫—Å–∞"""
    await send_random_comix(message, bot)


@dp.message() # –Ω–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è
# –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –ª—é–±–æ–π —Ç–µ–∫—Å—Ç, –≤–≤–µ–¥—ë–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
async def echo(message: types.Message): #–°–æ–∑–¥–∞—ë–º —Ñ—É–Ω–∫—Ü–∏—é —Å –ø—Ä–æ—Å—Ç–æ–π –∑–∞–¥–∞—á–µ–π
    # ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω–æ —Ç–æ—Ç –∂–µ —Ç–µ–∫—Å—Ç, —á—Ç–æ –≤–≤—ë–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.
    await message.answer(f'–í—Å–µ –≥–æ–≤–æ—Ä—è—Ç {message.text}, –∞ —Ç—ã –∫—É–ø–∏ —Å–ª–æ–Ω–∞')


# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())





# import asyncio
#
# from aiogram import Bot, Dispatcher, types
# from aiogram.types import InputFile, URLInputFile
#
# import setting
# import requests
#
# token = setting.api_token
#
# #–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç—ã bot –∏ Dispatcher,
# # –ø–µ—Ä–µ–¥–∞–≤ –ø–µ—Ä–≤–æ–º—É –Ω–∞—à —Ç–æ–∫–µ–Ω. –ï—Å–ª–∏ –∏—Ö –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å,
# # —Ç–æ –∫–æ–¥ –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å.
#
# bot = Bot(token=token, parse_mode="HTML")
# dp = Dispatcher(bot)
#
# @dp.message_handler(commands=['start']) # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∏–Ω–∏—Ü–∏–∞—Ü–∏–∏ —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# async def send_welcome(message: types.Message):
#     # –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è AWAIT
#     await message.reply("–ü—Ä–∏–≤–µ—Ç!\n–Ø –ü—Å–∏–Ω–∞-–∫–æ–º–∏–∫—Å-–±–æ—Ç\n–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, "
#                        "–∞ —è —Ç–µ–±–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–≤–µ—á—É.")
#
#
# # @dp.message_handler() # –Ω–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è
# # # –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –ª—é–±–æ–π —Ç–µ–∫—Å—Ç, –≤–≤–µ–¥—ë–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
# # async def echo(message: types.Message): #–°–æ–∑–¥–∞—ë–º —Ñ—É–Ω–∫—Ü–∏—é —Å –ø—Ä–æ—Å—Ç–æ–π –∑–∞–¥–∞—á–µ–π
# #     # ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω–æ —Ç–æ—Ç –∂–µ —Ç–µ–∫—Å—Ç, —á—Ç–æ –≤–≤—ë–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.
# #     await message.answer(message.text)
#
#
# @dp.message_handler(commands=['g'])
# async def send_comix(message: types.Message):
#     file_ids = []
#
#     image_from_url = URLInputFile("https://sun9-30.userapi.com/impg/ff5z_HA2KGSeaPXuqFZPhvk-Wi4UCLNHCwBhYA/FWmN1Sqw-Sw.jpg?size=960x1280&quality=95&sign=8b769aa9e946bf9f959d28abd3a8dbe8&type=album")
#     result = await message.answer_photo(
#         image_from_url,
#         caption="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ —Å—Å—ã–ª–∫–µ"
#     )
#     file_ids.append(result.photo[-1].file_id)
#     await message.answer("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:\n" + "\n".join(file_ids))
#
#
# @dp.message_handler(commands=['d'])
# async def send_comix(message: types.Message):
#     await message.reply("Hello, <b>world</b>!", parse_mode="HTML")
#
#
#
# if __name__ == '__main__':
#     asyncio.run()