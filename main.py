import asyncio
import logging
import os
import random
import time

from aiogram.utils.formatting import Text
from aiogram.utils.keyboard import InlineKeyboardBuilder

import setting
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters.command import Command
import cv # —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–æ–º–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∏—è
import vk_api_funk
import tales

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)
# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token=setting.api_token, parse_mode='HTML')
# –î–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher()


# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@dp.message(Command("start"))  # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∏–Ω–∏—Ü–∏–∞—Ü–∏–∏ —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def cmd_start(message: types.Message):
    # –∫–Ω–æ–ø–∫–∏ –∫–æ—Ç–æ—Ä—ã–µ –ø–æ—è–≤–ª—è—é—Ç—Å—è —Å–æ —Å—Ç–∞—Ä—Ç–æ–º
    kb = [
        [
            types.KeyboardButton(text="—Å–ª—É—á–∞–π–Ω—ã–π –∫–æ–º–∏–∫—Å"),
            types.KeyboardButton(text="–¥—Ä—É–≥–æ–µ")
        ],
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder=""
    )

    await message.answer("–ì–∞–≤-–≥–∞–≤! –ü—Ä–∏–≤–µ—Ç!üê∂"
                         "\n–Ø –ü–µ—Å–º–∏—Ç-–±–æ—Çü¶¥, –≤—ã–¥–∞—é —Å–ª—É—á–∞–π–Ω—ã–π –∫–æ–º–∏–∫—Å –ø—Ä–æ —Å–µ–±—è –ø–æ –∑–∞–ø—Ä–æ—Å—É /comix.üå≠"
                         "\n–ü–æ–Ω–µ–º–Ω–æ–≥—É —è –æ–±—Ä–∞—Å—Ç–∞—é —Ä–∞–∑–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ =, –Ω–∞–ø—Ä–∏–º–µ—Ä /story"
                         "\n–£ –º–µ–Ω—è –µ—Å—Ç—å —Ä–µ–∂–∏–º —ç—Ö–æ –∏ –ø–æ–∑–∂–µ –ø–æ—è–≤—è—Ç—Å—è –µ—â–µ —Ñ—É–Ω–∫—Ü–∏–∏, —É–∑–Ω–∞–π –∏—Ö –ø–æ –∑–∞–ø—Ä–æ—Å—É /help",
                         reply_markup=keyboard)


async def download_photo(photo: types.PhotoSize):
    file_path = os.path.join('/tmp', f"{photo.file_unique_id}.jpg")
    await bot.download(photo.file_id, file_path)
    return file_path


@dp.message(Command('photo'))
async def send_photo(message: types.Message, bot:Bot):
    await bot.download(
        message.photo[-1],
        destination=f"/tmp/{message.photo[-1].file_id}.jpg"
        )


@dp.message(Command("comix"))
async def send_random_comix(message: types.Message, bot:Bot):
    # file_ids = [] # –µ—Å–ª–∏ –ø–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å (–ø–æ–∫–∞ –Ω–µ –≤–∏–∂—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
    image_from_url = types.URLInputFile(vk_api_funk.get_random_comix(), bot)

    # –ø—Ä–æ—Å—Ç–µ–π—à–∏–π —Ä–µ–∂–∏–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    with open('log.txt', 'a', encoding='utf-8') as l:
        l.write(f'-> –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.chat.username} –∑–∞–ø—Ä–æ—Å–∏–ª –∫–æ–º–∏–∫—Å –∏ –ø–æ–ª—É—á–∏–ª {image_from_url}\n')

    kb = [
        [
            types.KeyboardButton(text="—Å–ª—É—á–∞–π–Ω—ã–π –∫–æ–º–∏–∫—Å"),
            types.KeyboardButton(text="–¥—Ä—É–≥–æ–µ"),
        ],
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder=""
    )
    # builder = InlineKeyboardBuilder()
    # builder.add(types.InlineKeyboardButton(
    #     text="–î–ê üê∂ü¶¥",
    #     callback_data="comix")
    # )

    # –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
    answer = ('–í–æ—Ç —Ç–∞–∫–æ–π', '–£ –º–µ–Ω—è –µ—Å—Ç—å –≤–æ—Ç —ç—Ç–æ—Ç', '–°–º–æ—Ç—Ä–∏ –∫–∞–∫–æ–π –µ—â—ë –µ—Å—Ç—å', '–≠—Ç–æ –º–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è',
              '–ü–æ–ª—É—á–∏—Ç–µ - —Ä–∞—Å–ø–∏—à–∏—Ç–µ—Å—å', '–û–ø—è—Ç—å —Ä–∞–±–æ—Ç–∞? –ó–Ω–∞—é-–∑–Ω–∞—é, —è —Å–∞–º –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞—é', "–ì–∞–≤-–≥–∞–≤!",
              'üê∂', 'üêï‚Äçü¶∫', '–í–æ—Ç –±—ã –º–Ω–µ –∫–æ—Å—Ç–æ—á–∫—É –∑–∞ —Å–∫–æ—Ä–æ—Å—Ç—å!', '–Ø –±—ã—Å—Ç—Ä—ã–π –ø—ë—Å', '–•–æ—Ä–æ—à–∏–π –º–∞–ª—å—á–∏–∫ –≤—ã–ø–æ–ª–Ω–∏–ª –∑–∞–¥–∞–Ω–∏–µ!')

    await message.answer_photo(
        image_from_url,
        caption=random.choice(answer),
    )
    await message.answer('–•–æ—á–µ—à—å –µ—â—ë? /comix üê∂ü¶¥', reply_markup=keyboard)


@dp.message(Command("story"))
async def story_mode(message: types.Message):
    """–•—ç–Ω–¥–ª–µ—Ä –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É —Ñ—É–Ω–∫—Ü–∏–∏ –∫–∞–∫—É—é-–Ω–∏–±—É–¥—å –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    await message.answer(tales.read_and_send())
    time.sleep(30) # –≤—Ä–µ–º—è –Ω–∞ —á—Ç–µ–Ω–∏–µ
    await help_menu(message) #–≤–æ–∑–≤—Ä–∞—â–∞–µ–º –º–µ–Ω—é


@dp.message(Command("help"))
async def help_menu(message: types.Message):
    """–ú–µ–Ω—é"""
    await message.answer('–ú–ï–ù–Æ:\n–¢—É—Ç –∫—Ä–∞—Ç–∫–æ –æ–ø–∏—Å–∞–Ω—ã —Ñ—É–Ω–∫—Ü–∏–∏:'
                         '\n/comix - –æ—Ç–ø—Ä–∞–≤–∏—Ç –≤–∞–º —Å–ª—É—á–∞–π–Ω—ã–π –≤—ã–ø—É—Å–∫ –∫–æ–º–∏–∫—Å–∞ –ø—Ä–æ –º–∞–ª–µ–Ω—å–∫–æ–≥–æ —Ä—ã–∂–µ–≥–æ –ø—Å–∞'
                         '\n/story - –∏—Å—Ç–æ—Ä–∏–∏ –æ –ø–µ—Å–∏–∫–∞—Ö, —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é'
                         '\n/help - —ç—Ç–æ –º–µ–Ω—é')
    #  '\n/photo - –Ω–µ–±–æ–ª—å—à–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–∞—à–∏—Ö –∫–∞—Ä—Ç–∏–Ω–æ–∫ –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π'


@dp.message(lambda message: message.text == "–¥—Ä—É–≥–æ–µ")
async def help_button(message: types.Message):
    """–ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –≤ –º–µ–Ω—é"""
    await help_menu(message)


@dp.message(lambda message: message.text == "—Å–ª—É—á–∞–π–Ω—ã–π –∫–æ–º–∏–∫—Å")
async def with_puree(message: types.Message):
    """–∫–Ω–æ–ø–∫–∞ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∫–æ–º–∏–∫—Å–∞"""
    await send_random_comix(message, bot)


@dp.message() # –≠—Ö–æ —Å–æ–±—ã—Ç–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è
# –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –ª—é–±–æ–π —Ç–µ–∫—Å—Ç, –≤–≤–µ–¥—ë–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
async def echo(message: types.Message): #–°–æ–∑–¥–∞—ë–º —Ñ—É–Ω–∫—Ü–∏—é —Å –ø—Ä–æ—Å—Ç–æ–π –∑–∞–¥–∞—á–µ–π
    # ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω–æ —Ç–æ—Ç –∂–µ —Ç–µ–∫—Å—Ç, —á—Ç–æ –≤–≤—ë–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.
    await message.answer(f'–í—Å–µ –≥–æ–≤–æ—Ä—è—Ç {message.text}, –∞ —Ç—ã –∫—É–ø–∏ —Å–ª–æ–Ω–∞')

# –ü–æ–∫–∞ –Ω–µ—Ä–∞–±–æ—á–∞—è –≤—Å–ø–ª—ã–≤–∞—é—â–∞—è –∫–Ω–æ–ø–∫–∞
# @dp.callback_query(Command("comix"))
# async def send_random_value(callback: types.CallbackQuery):
#     print('–º—ã —Ç—É—Ç')
#     await send_random_comix(callback.message, bot)


# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())